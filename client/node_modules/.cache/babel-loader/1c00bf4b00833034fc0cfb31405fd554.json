{"remainingRequest":"/goinfre/pntsunts/Desktop/matcha/client/node_modules/babel-loader/lib/index.js!/goinfre/pntsunts/Desktop/matcha/client/node_modules/eslint-loader/index.js??ref--13-0!/goinfre/pntsunts/Desktop/matcha/client/src/scripts/profile_edit_component.js","dependencies":[{"path":"/goinfre/pntsunts/Desktop/matcha/client/src/scripts/profile_edit_component.js","mtime":1593688434924},{"path":"/goinfre/pntsunts/Desktop/matcha/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/goinfre/pntsunts/Desktop/matcha/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/goinfre/pntsunts/Desktop/matcha/client/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/goinfre/pntsunts/Desktop/matcha/client/src/scripts/profile_edit_component.js"],"names":["UserProfileService","gallery","Table","Constant","Interests","Languages","Countries","VueSession","Vue","use","name","components","data","pictures","selection","languages","interests","defaultInterests","defaultLanguages","toInterest","toLanguages","firstname","lastname","street","postcode","city","country","state","biography","items","relationship","value","height","age","race","hair","profileObj","success","dialog","loading","modal","dialogBox","username","countries","relations","props","lang","type","String","interest","mounted","$root","$on","titles","forEach","push","$session","get","getUserDetails","res","getInterest","output","getLanguage","User","firstName","lastName","status","methods","updateProfile","results","insertInterest","insertLanguage","console","log","removeLanguage","index","item","splice","removeInterest","alert","addLanguage","filter","lan","includes","addInterest","getSelectedItem","JSON","stringify","addOject","key","$set","updatePictures","upload","length","$emit","$destroy"],"mappings":"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","sourcesContent":["import UserProfileService from '../services/UserProfileService'\nimport gallery from '../components/gallery'\nimport Table from '../services/tables'\nimport Constant from '../services/constants'\nimport Interests from '../jsons/interests'\nimport Languages from '../jsons/languages'\nimport Countries from '../jsons/countries'\nimport VueSession from 'vue-session'\nimport Vue from 'vue'\nVue.use(VueSession)\n\nexport default {\n  name: 'Profile Edit',\n  components: {\n    gallery\n  },\n  data () {\n    return {\n      pictures: [],\n      selection: [],\n      languages: [],\n      interests: [],\n      defaultInterests: [],\n      defaultLanguages: [],\n      toInterest: [],\n      toLanguages: [],\n      firstname: '',\n      lastname: '',\n      street: '',\n      postcode: '',\n      city: '',\n      country: '',\n      state: '',\n      biography: '',\n      items: [\n        { name: Constant.relationship, value: '' },\n        { name: Constant.height, value: '' },\n        { name: Constant.age, value: '' },\n        { name: Constant.race, value: '' },\n        { name: Constant.hair, value: '' }\n      ],\n      profileObj: [],\n      success: '',\n      dialog: false,\n      loading: false,\n      modal: false,\n      dialogBox: false,\n      username: '',\n      countries: [],\n      race: ['Black', 'Mix Race', 'White', 'Indian', 'Chineese'],\n      relations: ['Single', 'In a Relationship', 'Engaged', 'Married', 'Seperated', 'Divorced', 'Widowed', 'Complicated']\n    }\n  },\n  props: {\n    lang: { type: String },\n    interest: { type: String }\n  },\n  async mounted () {\n    this.$root.$on('Edit', () => {\n      this.titles = 'Edit'\n    })\n    Countries.forEach(country => {\n      this.countries.push(country.name)\n    })\n    this.defaultInterests = Interests\n    this.defaultLanguages = Languages\n    this.username = this.$session.get('username')\n    const res = (await UserProfileService.getUserDetails(this.$session.get('userid')))[0]\n    let output = await UserProfileService.getInterest(this.$session.get('userid'))\n    let lang = await UserProfileService.getLanguage(this.$session.get('userid'))\n    this.firstname = res[Table.User.firstName]\n    this.lastname = res[Table.User.lastName]\n    this.biography = res[Table.User.biography]\n    this.items[0].value = res[Table.User.status]\n    this.items[1].value = res[Table.User.height]\n    this.items[2].value = res[Table.User.age]\n    this.items[3].value = res[Table.User.race]\n    this.items[4].value = res[Table.User.hair]\n    this.street = res[Table.User.street]\n    this.postcode = res[Table.User.postcode]\n    this.city = res[Table.User.city]\n    this.country = res[Table.User.country]\n    this.state = res[Table.User.state]\n    lang.forEach(lang => {\n      this.languages.push(lang[Table.Languages.name])\n    })\n    output.forEach(interest => {\n      this.interests.push(interest[Table.Interests.name])\n    })\n  },\n  methods: {\n    async updateProfile () {\n      try {\n        let results = await UserProfileService.updateProfile(this.firstname, this.lastname,\n          this.biography, this.items[0].value, this.items[1].value, this.items[2].value, this.items[3].value,\n          this.items[4].value, this.street, this.postcode, this.city, this.country, this.state,\n          this.$session.get('userid'), this.languages, this.interests)\n        await UserProfileService.insertInterest(this.interests, this.$session.get('userid'))\n        await UserProfileService.insertLanguage(this.languages, this.$session.get('userid'))\n        this.success = results\n        this.dialog = false\n      } catch (error) {\n        console.log(error)\n      }\n    },\n    async removeLanguage (index, item) {\n      try {\n        this.languages.splice(index, 1)\n        await UserProfileService.removeLanguage(item, this.$session.get('userid'))\n      } catch (error) {\n        console.log(error)\n      }\n    },\n    async removeInterest (index, item) {\n      try {\n        this.interests.splice(index, 1)\n        alert(item)\n        await UserProfileService.removeInterest(item, this.$session.get('userid'))\n      } catch (error) {\n        console.log(error)\n      }\n    },\n    addLanguage () {\n      const res = this.languages.filter(lan => lan === this.lang)\n      if (this.lang && !res.includes(this.lang)) {\n        this.languages.push(this.lang)\n        this.lang = ''\n      }\n    },\n    addInterest () {\n      const res = this.interests.filter(interest => interest === this.interest)\n      if (this.interest && !res.includes(this.interest)) {\n        this.interests.push(this.interest)\n        this.interest = ''\n      }\n    },\n    getSelectedItem () {\n      this.dialogBox = false\n      alert(JSON.stringify(this.toInterest))\n    },\n    addOject (key, value) {\n      this.$set(this.profileObj, key, value)\n    },\n    updatePictures (pictures) {\n      this.pictures = pictures\n    },\n    upload (pictures) {\n      if (this.pictures.length < 5) {\n        this.$root.$emit('Upload')\n        this.$destroy()\n      } else {\n        alert('The maximum of five pictures has been reached!')\n      }\n    }\n  }\n}\n"]}]}