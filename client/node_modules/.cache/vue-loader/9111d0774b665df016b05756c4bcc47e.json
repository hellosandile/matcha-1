{"remainingRequest":"/goinfre/pntsunts/Desktop/matcha/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/goinfre/pntsunts/Desktop/matcha/client/src/views/ProfileEdit.vue?vue&type=style&index=0&id=722ea589&scoped=true&lang=css&","dependencies":[{"path":"/goinfre/pntsunts/Desktop/matcha/client/src/views/ProfileEdit.vue","mtime":1593089863623},{"path":"/goinfre/pntsunts/Desktop/matcha/client/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/goinfre/pntsunts/Desktop/matcha/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/goinfre/pntsunts/Desktop/matcha/client/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/goinfre/pntsunts/Desktop/matcha/client/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/goinfre/pntsunts/Desktop/matcha/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/goinfre/pntsunts/Desktop/matcha/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmxhbmd1YWdlcwp7CiAgYmFja2dyb3VuZDogI2ZmZjsKICBwYWRkaW5nOiAwOwogIG92ZXJmbG93OiBoaWRkZW47Cn0KLmRpYWxvZy1zdHlsZQp7CiAgd2lkdGg6IDQwMHB4Owp9Cg=="},{"version":3,"sources":["ProfileEdit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ProfileEdit.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <v-card\n    class=\"mx-auto my-12\"\n  >\n     <v-container id=\"dropdown-example-2\">\n       <v-row>\n        <v-col cols=\"2\"\n          class=\"d-xs-flex\"\n          color=\"deep-purple lighten-3\"\n          dark\n          >\n              <v-container class=\"text-center\">\n              <template>\n                  <v-btn icon @click=\"upload\">\n                    <v-icon>mdi-camera-plus</v-icon>\n                  </v-btn>\n                  <v-card-text>Upload Photo</v-card-text>\n              </template>\n              </v-container>\n            </v-col>\n          <v-col cols=\"10\" class=\"text-right\">\n            <v-btn rounded outlined color=\"success\">\n              <v-icon left>mdi-check</v-icon>save\n            </v-btn>\n          </v-col>\n      </v-row>\n       <v-row\n       justify=\"space-around\"\n       >\n            <v-col\n              v-for=\"n in pictures\"\n              :key=\"n\"\n              class=\"d-xs-inline-flex\"\n              cols=\"3\"\n            >\n              <v-card>\n                <v-img\n                  :src='`http://localhost:5000/api/posts/uploads/${n}`'\n                  :lazy-src='`http://localhost:5000/api/posts/uploads/${n}`'\n                  aspect-ratio=\"1.5\"\n                  gradient=\"to bottom, rgba(0,0,0,.1), rgba(0,0,0,.5)\"\n                  class=\"fill-height white--text align-end grey lighten-2\"\n                >\n                <template v-slot:placeholder>\n                  <v-row\n                    class=\"fill-height ma-0\"\n                    align=\"center\"\n                    justify=\"center\"\n                  >\n                    <v-progress-circular indeterminate color=\"grey lighten-5\"></v-progress-circular>\n                  </v-row>\n                </template>\n                </v-img>\n              </v-card>\n            </v-col>\n          </v-row>\n    </v-container>\n    <v-divider class=\"mx-4\"></v-divider>\n    <v-card-text>\n      <v-row\n        align=\"center\"\n        class=\"mx-0\"\n      >\n      <v-col cols=\"12\">\n          <v-card flat>\n            <v-card-text>\n               <v-container>\n      <v-row>\n        <v-col\n          cols=\"12\"\n          md=\"4\"\n        >\n          <v-text-field\n            v-model=\"firstname\"\n            label=\"First name\"\n            required\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          md=\"4\"\n        >\n          <v-text-field\n            v-model=\"lastname\"\n            label=\"Last name\"\n            required\n          ></v-text-field>\n        </v-col>\n      </v-row>\n               </v-container>\n            </v-card-text>\n              <v-card-title>Biography</v-card-title>\n              <v-card-subtitle>\n                <v-textarea\n                clearable\n                v-model=\"biography\"\n                label=\"Bio(optional).\"\n                ></v-textarea>\n              </v-card-subtitle>\n              <v-card-text>\n                <v-row\n                    v-for=\"item in items\"\n                    v-bind:key=\"item.name\"\n                    class=\"d-flex child-flex\"\n                    cols=\"4\"\n                >\n                    <v-col cols=\"3\">\n                      <v-card-text>{{ item.name }}</v-card-text>\n                    </v-col>\n                    <v-col cols=\"2\">\n                      <v-card-text>:</v-card-text>\n                    </v-col>\n                    <v-col cols=\"6\">\n                      <v-text-field\n                      v-model=\"item.value\"\n                      ></v-text-field>\n                    </v-col>\n                </v-row>\n              </v-card-text>\n          </v-card>\n      </v-col>\n      </v-row>\n    </v-card-text>\n    <v-divider class=\"mx-4\"></v-divider>\n\n    <v-card-title>\n      <v-row>\n        <v-col\n        cols=\"2\"\n        >\n        Languages\n        </v-col>\n        <v-col\n        cols=\"10\"\n        class=\"text-right\"\n        >\n        <v-dialog v-model=\"modal\" hide-overlay transition=\"scroll-y-reverse-transition\">\n        <template v-slot:activator=\"{ on, attrs }\">\n          <v-btn icon\n              v-bind=\"attrs\"\n              v-on=\"on\">\n            <v-icon>mdi-plus-circle-outline</v-icon>\n          </v-btn>\n        </template>\n        <template>\n        <div class=\"languages\">\n              <v-toolbar dark color=\"deep-purple lighten-3\">\n                <v-toolbar-title>Select Languages </v-toolbar-title>\n                <v-spacer></v-spacer>\n                <v-toolbar-items>\n                <v-btn icon dark @click=\"modal = false\">\n                  <v-icon>mdi-check</v-icon>\n                </v-btn>\n                <v-btn icon dark @click=\"modal = false\">\n                  <v-icon>mdi-close</v-icon>\n                </v-btn>\n                </v-toolbar-items>\n              </v-toolbar>\n              <v-row class=\"pa-12\">\n              <v-chip-group\n              v-model=\"toLanguages\"\n              multiple\n              >\n              <v-col\n                v-for='(item, index) in defaultLanguages'\n                :key='index'\n                class=\"shrink\"\n                ref=\"lang\"\n                cols=\"5\"\n              >\n                <v-chip filter>{{ item }}</v-chip>\n              </v-col>\n              </v-chip-group>\n              </v-row>\n        </div>\n        </template>\n          </v-dialog>\n        </v-col>\n      </v-row>\n    </v-card-title>\n    <v-card-text full-width>\n      <v-expansion-panels>\n        <v-expansion-panel\n        >\n          <v-expansion-panel-header>Enter additional Language(s)</v-expansion-panel-header>\n          <v-expansion-panel-content>\n            <v-text-field\n              v-model=\"lang\"\n              placeholder=\"type here...\"\n              @keyup.enter=\"addLanguage\"\n            ></v-text-field>\n          </v-expansion-panel-content>\n        </v-expansion-panel>\n      </v-expansion-panels>\n      <v-row>\n      <v-col\n        v-for='(item, index) in languages'\n        :key='index'\n        class=\"shrink\"\n      >\n        <v-chip close filter outlined @click:close=\"close(index)\">{{ item }}</v-chip>\n      </v-col>\n      </v-row>\n    </v-card-text>\n\n    <v-divider class=\"mx-4\"></v-divider>\n\n    <v-card-title>\n      <v-row>\n        <v-col\n        cols=\"2\"\n        >\n        Interests\n        </v-col>\n        <v-col\n        cols=\"10\"\n        class=\"text-right\"\n        >\n        <v-dialog v-model=\"dialogBox\" hide-overlay transition=\"scroll-y-reverse-transition\">\n        <template v-slot:activator=\"{ on, attrs }\">\n          <v-btn icon\n              v-bind=\"attrs\"\n              v-on=\"on\">\n            <v-icon>mdi-plus-circle-outline</v-icon>\n          </v-btn>\n        </template>\n        <template>\n        <div class=\"languages\">\n              <v-toolbar dark color=\"deep-purple lighten-3\">\n                <v-toolbar-title>Select Interest(s) </v-toolbar-title>\n                <v-spacer></v-spacer>\n                <v-toolbar-items>\n                <v-btn icon dark @click=\"getSelectedItem\">\n                  <v-icon>mdi-check</v-icon>\n                </v-btn>\n                <v-btn icon dark @click=\"dialogBox = false\">\n                  <v-icon>mdi-close</v-icon>\n                </v-btn>\n                </v-toolbar-items>\n              </v-toolbar>\n              <v-row class=\"pa-12\">\n              <v-chip-group\n                v-model=\"toInterests\"\n                multiple\n              >\n              <v-col\n                v-for='(item, index) in defaultInterests'\n                :key='index'\n                class=\"shrink\"\n                ref=\"lang\"\n                cols=\"2\"\n              >\n                <v-chip filter>{{ item }}</v-chip>\n              </v-col>\n              </v-chip-group>\n              </v-row>\n        </div>\n        </template>\n        </v-dialog>\n        </v-col>\n      </v-row>\n    </v-card-title>\n\n    <v-card-text>\n      <v-expansion-panels>\n        <v-expansion-panel>\n          <v-expansion-panel-header>Enter additional interest(s)</v-expansion-panel-header>\n          <v-expansion-panel-content>\n          <v-text-field\n            placeholder=\"type here...\"\n            v-model=\"interest\"\n            @keyup.enter=\"addInterest\"\n          ></v-text-field>\n          </v-expansion-panel-content>\n        </v-expansion-panel>\n      </v-expansion-panels>\n      <v-row>\n      <v-col\n        v-for='(item, index) in interests'\n        :key='index'\n        class=\"shrink\"\n        ref=\"lang\"\n      >\n        <v-chip close filter outlined @click:close=\"removeInterest(index)\">{{ item }}</v-chip>\n      </v-col>\n      </v-row>\n    </v-card-text>\n    <v-card-actions>\n            <v-row>\n          <v-col cols=\"12\" class=\"text-right\">\n            <v-btn rounded outlined color=\"success\" :disabled=\"loading\" :loading=\"loading\" v-on:click=\"updateProfile\">\n              <v-icon left>mdi-check</v-icon>save\n            </v-btn>\n          </v-col>\n      </v-row>\n    </v-card-actions>\n  </v-card>\n</template>\n<style scoped>\n .languages\n {\n   background: #fff;\n   padding: 0;\n   overflow: hidden;\n }\n .dialog-style\n {\n   width: 400px;\n }\n</style>\n<script>\nimport UserProfileService from '../services/UserProfileService'\nimport Table from '../services/tables'\nimport Constant from '../services/constants'\nimport Interests from '../jsons/interests'\nimport Languages from '../jsons/languages'\n\nexport default {\n  name: 'Profile Edit',\n  data () {\n    return {\n      pictures: [],\n      selection: [],\n      languages: [],\n      interests: [],\n      defaultInterests: [],\n      defaultLanguages: [],\n      toInterest: [],\n      toLanguages: [],\n      firstname: '',\n      lastname: '',\n      biography: '',\n      items: [\n        { name: Constant.relationship, value: '' },\n        { name: Constant.height, value: '' },\n        { name: Constant.age, value: '' },\n        { name: Constant.race, value: '' },\n        { name: Constant.hair, value: '' }\n      ],\n      profileObj: [],\n      success: '',\n      dialog: false,\n      loading: false,\n      modal: false,\n      dialogBox: false\n    }\n  },\n  props: {\n    lang: { type: String },\n    interest: { type: String }\n  },\n  async mounted () {\n    this.$root.$on('Edit', () => {\n      this.titles = 'Edit'\n    })\n    this.defaultInterests = Interests\n    this.defaultLanguages = Languages\n    const pics = await UserProfileService.readImages()\n    this.pictures = pics.data\n    const res = (await UserProfileService.getUserDetails(1))[0]\n    let output = await UserProfileService.getInterest(1)\n    let lang = await UserProfileService.getLanguage(1)\n    this.firstname = res[Table.User.firstName]\n    this.lastname = res[Table.User.lastName]\n    this.biography = res[Table.User.biography]\n    this.items[0].value = res[Table.User.status]\n    this.items[1].value = res[Table.User.height] + 'm'\n    this.items[2].value = res[Table.User.age] + 'yrs'\n    this.items[3].value = res[Table.User.race]\n    this.items[4].value = res[Table.User.hair]\n    lang.forEach(lang => {\n      this.languages.push(lang[Table.Languages.name])\n    })\n    output.forEach(interest => {\n      this.interests.push(interest[Table.Interests.name])\n    })\n  },\n  methods: {\n    async updateProfile () {\n      this.dialog = true\n      try {\n        let results = await UserProfileService.updateProfile(this.firstname, this.lastname,\n          this.biography, this.items[0].value, this.items[1].value, this.items[2].value, this.items[3].value,\n          this.items[4].value, 1, this.languages, this.interests)\n        await UserProfileService.insertInterest(this.interests, 1)\n        await UserProfileService.insertLanguage(this.languages, 1)\n        this.success = results\n        this.dialog = false\n      } catch (error) {\n        console.log(error)\n      }\n    },\n    close (index) {\n      this.languages.splice(index, 1)\n    },\n    removeInterest (index) {\n      this.interests.splice(index, 1)\n    },\n    addLanguage () {\n      let res = this.languages.filter(lang => lang === this.lang)\n      if (this.lang && (res !== this.lang)) {\n        this.languages.push(this.lang)\n        this.lang = ''\n      }\n    },\n    addInterest () {\n      let res = this.interests.filter(interest => interest === this.interest)\n      if (this.interest && (res !== this.interest)) {\n        this.interests.push(this.interest)\n        this.interest = ''\n      }\n    },\n    getSelectedItem () {\n      this.dialogBox = false\n      alert(JSON.stringify(this.toInterest))\n    },\n    addOject (key, value) {\n      this.$set(this.profileObj, key, value)\n    },\n    upload () {\n      this.$root.$emit('Upload')\n      this.$destroy()\n    }\n  }\n}\n</script>\n"]}]}