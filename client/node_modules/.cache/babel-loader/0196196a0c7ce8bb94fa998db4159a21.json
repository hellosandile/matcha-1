{"remainingRequest":"/goinfre/pntsunts/Desktop/matcha/client/node_modules/babel-loader/lib/index.js!/goinfre/pntsunts/Desktop/matcha/client/node_modules/eslint-loader/index.js??ref--13-0!/goinfre/pntsunts/Desktop/matcha/client/src/scripts/gallery-component.js","dependencies":[{"path":"/goinfre/pntsunts/Desktop/matcha/client/src/scripts/gallery-component.js","mtime":1593688434903},{"path":"/goinfre/pntsunts/Desktop/matcha/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/goinfre/pntsunts/Desktop/matcha/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/goinfre/pntsunts/Desktop/matcha/client/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zcGxpY2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaCI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9nb2luZnJlL3BudHN1bnRzL0Rlc2t0b3AvbWF0Y2hhL2NsaWVudC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBHYWxsZXJ5U2VydmljZSBmcm9tICcuLi9zZXJ2aWNlcy9HYWxsZXJ5U2VydmljZSc7CmltcG9ydCBUYWJsZSBmcm9tICcuLi9zZXJ2aWNlcy90YWJsZXMnOwppbXBvcnQgRXZlbnRCdXMgZnJvbSAnLi4vc2VydmljZXMvZXZlbnRfYnVzJzsKaW1wb3J0IFZ1ZVNlc3Npb24gZnJvbSAndnVlLXNlc3Npb24nOwppbXBvcnQgVnVlIGZyb20gJ3Z1ZSc7ClZ1ZS51c2UoVnVlU2Vzc2lvbik7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnZ2FsbGVyeScsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGljb25zOiBbJ21kaS1jaGVjaycsICdtZGktZXllLWNpcmNsZScsICdtZGktY2xvc2UnXSwKICAgICAgcGljdHVyZXM6IFtdLAogICAgICB1c2VybmFtZTogJycsCiAgICAgIHVzZXJpZDogJycsCiAgICAgIGRpYWxvZzogZmFsc2UsCiAgICAgIGltYWdlOiAnJwogICAgfTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgIHZhciBpbWFnZXMsIHBpY3M7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfdGhpcy51c2VybmFtZSA9IF90aGlzLiRzZXNzaW9uLmdldCgndXNlcm5hbWUnKTsKICAgICAgICAgICAgICBfdGhpcy51c2VyaWQgPSBfdGhpcy4kc2Vzc2lvbi5nZXQoJ3VzZXJpZCcpOwogICAgICAgICAgICAgIGltYWdlcyA9IFtdOwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA1OwogICAgICAgICAgICAgIHJldHVybiBHYWxsZXJ5U2VydmljZS5yZWFkSW1hZ2VzKF90aGlzLnVzZXJuYW1lLCBfdGhpcy51c2VyaWQpOwoKICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgIHBpY3MgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgIGltYWdlcyA9IHBpY3MuZGF0YTsKICAgICAgICAgICAgICBpbWFnZXMuZm9yRWFjaChmdW5jdGlvbiAocm93KSB7CiAgICAgICAgICAgICAgICBfdGhpcy5waWN0dXJlcy5wdXNoKHsKICAgICAgICAgICAgICAgICAgaWQ6IHJvd1tUYWJsZS5JbWFnZXMuaWRdLAogICAgICAgICAgICAgICAgICBuYW1lOiByb3dbVGFibGUuSW1hZ2VzLm5hbWVdLAogICAgICAgICAgICAgICAgICByb2xlOiByb3dbVGFibGUuSW1hZ2VzLnJvbGVdCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgX3RoaXMuJGVtaXQoJ2ltYWdlc0xpc3QnLCBfdGhpcy5waWN0dXJlcyk7CgogICAgICAgICAgICAgIEV2ZW50QnVzLiRlbWl0KCdwcm9maWxlJywgX3RoaXMucGljdHVyZXNbMF0ubmFtZSk7CgogICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlKTsKICAgIH0pKSgpOwogIH0sCiAgbWV0aG9kczogewogICAgcmVtb3ZlUGljdHVyZTogZnVuY3Rpb24gcmVtb3ZlUGljdHVyZShwaWNuYW1lLCBpbmRleCkgewogICAgICB0cnkgewogICAgICAgIHRoaXMucGljdHVyZXMuc3BsaWNlKGluZGV4LCAxKTsKICAgICAgICBHYWxsZXJ5U2VydmljZS5yZW1vdmVJbWFnZShwaWNuYW1lLCB0aGlzLnVzZXJuYW1lLCB0aGlzLnVzZXJpZCk7CiAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgIGNvbnNvbGUubG9nKGVycik7CiAgICAgIH0KICAgIH0sCiAgICBzZXRQcm9maWxlOiBmdW5jdGlvbiBzZXRQcm9maWxlKHBpY25hbWUsIGluZGV4KSB7CiAgICAgIHRyeSB7CiAgICAgICAgRXZlbnRCdXMuJGVtaXQoJ3Byb2ZpbGUnLCBwaWNuYW1lKTsKICAgICAgICB2YXIgb2xkSWQgPSB0aGlzLnBpY3R1cmVzLmZpbHRlcihmdW5jdGlvbiAoaW1hZ2VzKSB7CiAgICAgICAgICByZXR1cm4gaW1hZ2VzLnJvbGUgPT09ICdwcm9maWxlJzsKICAgICAgICB9KTsKICAgICAgICBvbGRJZFswXS5yb2xlID0gJ25vbmUnOwogICAgICAgIHRoaXMucGljdHVyZXNbaW5kZXhdLnJvbGUgPSAncHJvZmlsZSc7CiAgICAgICAgR2FsbGVyeVNlcnZpY2Uuc2V0UHJvZmlsZVBpYyhvbGRJZFswXS5pZCwgdGhpcy5waWN0dXJlc1tpbmRleF0uaWQsIHRoaXMudXNlcmlkKTsKICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgY29uc29sZS5sb2coZXJyKTsKICAgICAgfQogICAgfSwKICAgIHByZXZpZXdJbWFnZTogZnVuY3Rpb24gcHJldmlld0ltYWdlKHBpY25hbWUpIHsKICAgICAgdHJ5IHsKICAgICAgICB0aGlzLmRpYWxvZyA9IHRydWU7CiAgICAgICAgdGhpcy5pbWFnZSA9ICdodHRwOi8vbG9jYWxob3N0OjUwMDAvYXBpL3Bvc3RzL3VwbG9hZHMvJyArIHRoaXMudXNlcm5hbWUgKyAnLycgKyBwaWNuYW1lOwogICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICBjb25zb2xlLmxvZyhlcnIpOwogICAgICB9CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["/goinfre/pntsunts/Desktop/matcha/client/src/scripts/gallery-component.js"],"names":["GalleryService","Table","EventBus","VueSession","Vue","use","name","data","icons","pictures","username","userid","dialog","image","mounted","$session","get","images","readImages","pics","forEach","row","push","id","Images","role","$emit","methods","removePicture","picname","index","splice","removeImage","err","console","log","setProfile","oldId","filter","setProfilePic","previewImage"],"mappings":"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","sourcesContent":["import GalleryService from '../services/GalleryService'\nimport Table from '../services/tables'\nimport EventBus from '../services/event_bus'\nimport VueSession from 'vue-session'\nimport Vue from 'vue'\nVue.use(VueSession)\n\nexport default {\n  name: 'gallery',\n  data: () => {\n    return {\n      icons: ['mdi-check', 'mdi-eye-circle', 'mdi-close'],\n      pictures: [],\n      username: '',\n      userid: '',\n      dialog: false,\n      image: ''\n    }\n  },\n  async mounted () {\n    this.username = this.$session.get('username')\n    this.userid = this.$session.get('userid')\n    let images = []\n    const pics = await GalleryService.readImages(this.username, this.userid)\n    images = pics.data\n    images.forEach(row => {\n      this.pictures.push({ id: row[Table.Images.id], name: row[Table.Images.name], role: row[Table.Images.role] })\n    })\n    this.$emit('imagesList', this.pictures)\n    EventBus.$emit('profile', this.pictures[0].name)\n  },\n  methods: {\n    removePicture (picname, index) {\n      try {\n        this.pictures.splice(index, 1)\n        GalleryService.removeImage(picname, this.username, this.userid)\n      } catch (err) {\n        console.log(err)\n      }\n    },\n    setProfile (picname, index) {\n      try {\n        EventBus.$emit('profile', picname)\n        let oldId = this.pictures.filter(images => images.role === 'profile')\n        oldId[0].role = 'none'\n        this.pictures[index].role = 'profile'\n        GalleryService.setProfilePic(oldId[0].id, this.pictures[index].id, this.userid)\n      } catch (err) {\n        console.log(err)\n      }\n    },\n    previewImage (picname) {\n      try {\n        this.dialog = true\n        this.image = 'http://localhost:5000/api/posts/uploads/' + this.username + '/' + picname\n      } catch (err) {\n        console.log(err)\n      }\n    }\n  }\n}\n"]}]}